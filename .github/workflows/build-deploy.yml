name: Build and Deploy Code

on: 
    push:
    pull_request:
    workflow_dispatch:

jobs:
    CI:
        environment:
            name: testing
        env:
            DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
            DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
            DATABASE_PASSWORD : ${{ secrets.DATABASE_PASSWORD }}   
            DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
            DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}    
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            ALGORITHM: ${{ secrets.ALGORITHM }}
            ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
        
        runs-on: ubuntu-latest

        # Service containers to run with `container-job`
        services:
            # Label used to access the service container
            postgres:
                # Docker Hub image
                image: postgres
            # Provide the password for postgres
                env:
                    POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
                    POSTGRES_DB: ${{ secrets.DATABASE_NAME }}_test
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - name: pulling git repo
              uses: actions/checkout@v3
            - name: Install python version 3.9
              uses: actions/setup-python@v4
              with:
                python-version: '3.9'
            - name: Update pip
              run: python -m pip install --upgrade pip
            - name: Install all dependencies
              run: pip install -r requirements.txt
            - name: Test with Pytest
              run: |
                pip install pytest
                pytest
            # - name: Login to Docker Hub
            #   uses: docker/login-action@v2
            #   with:
            #     username: ${{ secrets.DOCKERHUB_USERNAME }}
            #     password: ${{ secrets.DOCKERHUB_TOKEN }}
            # - name: Set up Docker Buildx
            #   uses: docker/setup-buildx-action@v2
            # - name: Build and push
            #   uses: docker/build-push-action@v4
            #   with:
            #     context: .
            #     file: ./Dockerfile
            #     push: true
            #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/fasapi_aws-api:latest
            #     cache-from: type=registry,ref=user/fasapi_aws-api:latest
            #     cache-to: type=inline
    CD:
      needs: CI
      name: Deploy to ubuntu
      # The type of runner that the job will run on
      runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v3

      # Runs a single command using the runners shell
        - name: Create the .ssh directory
          run: mkdir ~/.ssh && chmod 700 ~/.ssh
        - name: Install the deploy key
          run: echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/deploy && chmod 600 ~/.ssh/deploy
        - name: Create the known hosts
          run: echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts     
        - name: deploy
          run: | 
            ssh -i ~/.ssh/deploy eze2286@159.223.184.80 'cd ~ && cd app/src && git pull && echo "${{ secrets.SERVER_KEY }}" | sudo -S systemctl restart api.service'
         
